spring.application.name=Joosik_Pro

spring.datasource.url=jdbc:mysql://43.201.106.65:3306/joo_pro?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
spring.datasource.username=pro
spring.datasource.password=pro
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.data.redis.host=15.165.159.84
spring.data.redis.port=6379

# API
koreainvest.api.first.url=https://openapivts.koreainvestment.com:29443/uapi/overseas-price/v1/quotations/price
koreainvest.first.tr_id=HHDFS00000300

koreainvest.api.second.url=https://openapivts.koreainvestment.com:29443/uapi/domestic-stock/v1/quotations/inquire-price
koreainvest.second.tr_id=FHKST01010100


koreainvest.appkey=???
koreainvest.appsecret=???
koreainvest.auth.token=???


apis.data.url=https://apis.data.go.kr/1160100/service/GetKrxListedInfoService/getItemInfo
apis.data.serviceKey=49OUcV1PdM5XSdpy%2BOXD%2B4TT4Lp6Y6u9Qqa41%2BHaa6srUXARM%2BZdBH1jtj8cYzkHPWfDYEKUxURqj1awABocqA%3D%3D

scheduler.topview.cron=0 * * * * *

# Kafka ??? ??
spring.kafka.bootstrap-servers=localhost:9092

# Producer ???
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer ??/????
spring.kafka.consumer.group-id=stock-data-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# ??? ??? ??
stock.kafka.topic=live-stock-price
